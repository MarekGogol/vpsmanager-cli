#!/usr/bin/env php
<?php
require_once 'vendor/autoload.php';

use Gogol\VpsManagerCLI\Command\Backup\BackupPerformCommand;
use Gogol\VpsManagerCLI\Command\Backup\BackupSetupCommand;
use Gogol\VpsManagerCLI\Command\Backup\BackupTestMailServer;
use Gogol\VpsManagerCLI\Command\Backup\BackupTestRemoteServer;
use Gogol\VpsManagerCLI\Command\Chroot\ChrootCreateCommand;
use Gogol\VpsManagerCLI\Command\Chroot\ChrootRemoveCommand;
use Gogol\VpsManagerCLI\Command\Chroot\ChrootUpdateCommand;
use Gogol\VpsManagerCLI\Command\Hosting\HostingCreateCommand;
use Gogol\VpsManagerCLI\Command\Hosting\HostingRemoveCommand;
use Gogol\VpsManagerCLI\Command\InstallManagerCommand;
use Gogol\VpsManagerCLI\Command\Mysql\MysqlCreateCommand;
use Gogol\VpsManagerCLI\Command\Mysql\MysqlRemoveCommand;
use Gogol\VpsManagerCLI\Command\SSLCreateCommand;
use Symfony\Component\Console\Application;

$application = new Application();

$application->add(new InstallManagerCommand());
$application->add(new HostingCreateCommand());
$application->add(new HostingRemoveCommand());
$application->add(new SSLCreateCommand());
$application->add(new BackupSetupCommand());
$application->add(new BackupPerformCommand());
$application->add(new BackupTestRemoteServer());
$application->add(new BackupTestMailServer());
$application->add(new MysqlCreateCommand());
$application->add(new MysqlRemoveCommand());
$application->add(new ChrootCreateCommand());
$application->add(new ChrootUpdateCommand());
$application->add(new ChrootRemoveCommand());

$application->run();
?>